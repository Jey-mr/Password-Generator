<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fcFx/wdABlsHvNHK1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>