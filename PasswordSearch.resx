<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>